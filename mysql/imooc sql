create table imooc
(id int not null auto_increment,
 title varchar(30) not null,
doctor varchar(20) not null,
country varchar(50) not null,
language varchar(50) not null,
year varchar(30) not null,
summary varchar(200) not null,
poster varchar(200) not null,
flash varchar(200) not null,
pushTime varchar(200) not null,
primary key(id,title,doctor)
)default charset utf8;

//user 

create table user
(id int auto_increment primary key,
name varchar(15),
password varchar(100),
tel varchar(11),
img varchar(100) default "../image/1.jpg",
introduce varchar(200) comment '简介',
sex varchar(2),
birthday varchar(50),
address varchar(100),
role int default 1
)default charset utf8;


insert  into user (name,password,tel,role) values ("张帆","c80e999bdba0e8956428491050529392","18829571810",10);
 
//admin
create table admin
(id int auto_increment primary key,
name varchar(15) not null,
password varchar(100),
tel varchar(11),
role int default 10
)default charset utf8;


//评论
create table comment(
id int auto_increment primary key comment '当前评论id',
messageID int comment '被回复的消息的id',
movieID int comment '电影id',
observerID int comment '被回复的用户id',
obcontent varchar(200) comment '被回复的内容',
obName varchar(20) comment  '被回复者的名字',
commenterID int not null comment '当前用户id',
time varchar(30) not null comment '消息发送的时间',
content varchar(200) comment '内容',
nice int default 0 comment '评论数目' ,
foreign key(movieID) references imooc (id),
foreign key(observerID) references user (id),
foreign key(commenterID) references user (id)

)default charset utf8;



create table nice 
(id int auto_increment primary key,
messageid int ,
userid int,
count int ,
foreign key(messageid) references comment(id),
foreign key(userid) references user(id)
)default charset utf8;



type : 0:随笔 /1：心情 /2.博客/3：日记
//存储blog的数据库

create table note
(id int auto_increment primary key,
 userID int comment '发表note的用户id',
type int default 0 comment '0随笔 1心情 2博客 3日记',
notes varchar(200) comment '存储URL',
noteTitle varchar(100),
foreign key(userID) references user(id)
)default charset utf8;

//对于Note的评论和回复
create table notecomment
(id int auto_increment primary key comment'当前评论的id',
  reviewid int comment'回复当前评论的评论的id',
  noteID int comment'当前被评论的note的id',
  userID int comment'当前评论者的id',
  reuserID int comment'当前回复者的id',
  nscontent varchar(300) comment'当前评论的内容',
  recontent varchar(300) comment'当前回复者的内容',
  noteNice int comment'当前评论的点赞数目',
  foreign key(noteID) references note(id),
  foreign key(userID) references user(id),
  foreign key(reuserID) references user(id)
)default charset utf8;

  


 findAllSql =`select note.id,note.userID,note.noteTitle,user.img from note,user where note.id =any(select id from note where type !=3 union select id from note where userID=${data.id} limit ${data.parper*8} ,${data.parper*8+8})`;
  
  
  


